swagger: '2.0'
info:
  title: API V1
  version: v1
schemes: ['https']
paths:
  '/bank_admins/login':
    get:
      summary: Login endpoint to get authentication token.
      tags:
        - Login
      parameters:
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: authentication
          description: "Filter user demographics by valid key/value pairs."
          in: body
          required: true
          schema:
            type: object
            required:
             - email
             - password
            properties:
              email:
                type: string
                description: Bank Admin email.
              password:
                type: string
                description: Bank Admin password.
      responses:
        '200':
          description: Authorized.
          schema:
            type: object
            properties:
              token: 
                type: string
                description: Authorization token. Expires in 24 hrs.
        '401':
          description: Unauthorized.
  '/users/{user_identifier}/demographics':
    get:
      summary: Gets all user demographic data.
      tags:
        - Demographics
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: demographic
          description: "Filter user demographics by valid key/value pairs."
          in: body
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user demographic data.
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of demographic record.
                key:
                  type: string
                  description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
                value:
                  type: string
                  description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        '400':
          description: Not found
    post:
      summary: Creates a user demographic record.
      tags:
        - Demographics
      consumes:
        - application/json
      parameters:
        - name: user_identifier
          description: "Bank Id for user"
          in: path
          required: true
          type: integer
        - name: demographic
          in: body
          required: true
          schema:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '201':
          description: Demographic entry created.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Unique Id that references the Demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        '422':
          description: unprocessable entity
  '/users/{user_identifier}/demographics/{id}':
    get:
      summary: Gets user demographic.
      tags:
        - Demographics
      parameters:
        - name: id
          description: Id of demographic record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic info returned.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
    patch:
      summary: Updates user demographic record.
      tags:
        - Demographics
      parameters:
        - name: id
          description: Id of demographic record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: demographic
          in: body
          required: true
          schema:
            type: object
            properties:
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic updated.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
    delete:
      summary: Deletes user demographic entry.
      tags:
        - Demographics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic deleted.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession ).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
  '/users/{user_identifier}/goals':
    get:
      summary: Gets all user goal data.
      tags:
        - Goals
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: goal
          description: "Filter user goals by valid key/value pairs."
          in: body
          schema:
            type: object
            required:
            - name
            - amount
            - completion
            - priority
            properties:
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user goal data.
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of goal record.
                name:
                  type: string
                  description: Name of goal.
                tag:
                  type: string
                  description: Customizable value which can be used to group different goals.
                amount:
                  type: integer
                  description: Total amount to save for goal.
                completion:
                  type: integer
                  description: Percent completion of goal.
                  minimum: 0
                  maximum: 100
                priority:
                  type: integer
                  description: Priority of user's goal with higher integer value equating to higher priority.
                  minimum: 1
                  maximum: 10
        '400':
          description: Not found
    post:
      summary: Creates a user goal record.
      tags:
        - Goals
      consumes:
        - application/json
      parameters:
        - name: user_identifier
          description: "Bank Id for user"
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            required:
            - name
            - amount
            - completion
            - priority
            properties:
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '201':
          description: Goal entry created.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Unique Id that references the Goal record.
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
        '422':
          description: unprocessable entity
  '/users/{user_identifier}/goals/{id}':
    get:
      summary: Gets user goal.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal info returned.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
    patch:
      summary: Updates user goal record.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            required:
            - name
            - amount
            - completion
            - priority
            properties:
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
                minimum: 0
                maximum: 100
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority.
                minimum: 1
                maximum : 10
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /bank_admins/login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal updated.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
    delete:
      summary: Deletes user goal entry.
      tags:
        - Goals
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: User goal deleted.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              name:
                type: string
                description: Name of goal.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              amount:
                type: integer
                description: Total amount to save for goal.
              completion:
                type: integer
                description: Percent completion of goal. Valid values (0 to 100).
              priority:
                type: integer
                description: Priority of user's goal with higher integer value equating to higher priority. Valid values (1 to 10).
  '/users/{user_identifier}/transfers':
    get:
      summary: Gets all user transfer data.
      tags:
        - Transfers
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: transfer
          description: "Filter user transfers by valid key/value pairs."
          in: body
          schema:
            type: object
            properties:
              origin_account: 
                type: string
                description: Origin Account that money was taken out of.
              destination_account:
                type: string
                description: Destination Account that money was put into.
              amount:
                type: integer
                description: Amount transferred.
              transfer_amount_attempted:
                type: integer
                description: Amount of times transfer was attempted.
              transfer_successful:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              next_transfer_date:
                type: string
                description: Date for next transfer.
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of all user transfer data.
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of transfer record.
                origin_account: 
                  type: string
                  description: Origin Account that money was taken out of.
                destination_account:
                  type: string
                  description: Destination Account that money was put into.
                amount:
                  type: integer
                  description: Amount transferred.
                transfer_amount_attempted:
                  type: integer
                  description: Amount of times transfer was attempted.
                transfer_successful:
                  type: boolean
                  description: Boolean value indicating if transfer was successful.
                next_transfer_date:
                  type: string
                  description: Date for next transfer.
        '400':
          description: Not found
  '/users/{user_identifier}/transfers/{id}':
    get:
      summary: Gets user transfer record.
      tags:
        - Transfers
      parameters:
        - name: id
          description: Id of transfer record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: User transfer info returned.
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of transfer record.
              origin_account: 
                type: string
                description: Origin Account that money was taken out of.
              destination_account:
                type: string
                description: Destination Account that money was put into.
              amount:
                type: integer
                description: Amount transferred.
              transfer_amount_attempted:
                type: integer
                description: Amount of times transfer was attempted.
              transfer_successful:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              next_transfer_date:
                type: string
                description: Date for next transfer.
        '400':
          description: Not found.
  '/users':
    get:
      summary: Gets all users.
      tags:
        - Users
      parameters:
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: All users are returned.
          schema:
            type: array
            items:
              type: object
              properties:
                sequence: 
                  type: integer
                  description: Customizable value to verify request value.
                bank_user_id: 
                  type: string
                  description: Bank Id of user.
                savings_account_identifier:
                  type: string
                  description: Savings account number.
                checking_account_identifier:
                  type: integer
                  description: Checking account number.
                transfers_active:
                  type: boolean
                  description: Transfers active on user.
                safety_net_active:
                  type: boolean
                max_transfer_amount:
                  type: integer
                  description: Max transfer account for user at any given time.
        '400':
          description: Not found.
    post:
      summary: Create user.
      tags:
        - Users
      parameters:
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            type: array
            items:
              type: object
              properties:
                sequence: 
                  type: integer
                  description: Customizable value to verify request value.
                bank_user_id: 
                  type: string
                  description: Bank Id of user.
                savings_account_identifier:
                  type: string
                  description: Savings account number.
                checking_account_identifier:
                  type: integer
                  description: Checking account number.
                transfers_active:
                  type: boolean
                  description: Transfers active on user.
                safety_net_active:
                  type: boolean
                max_transfer_amount:
                  type: integer
                  description: Max transfer account for user at any given time.
        '400':
          description: Not found.
  '/users/{user_identifier}':
    get:
      summary: Gets all users.
      tags:
        - Users
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            type: object
            properties:
              sequence: 
                type: integer
                description: Id of transfer record.
              bank_user_id: 
                type: string
                description: Origin Account that money was taken out of.
              savings_account_identifier:
                type: string
                description: Destination Account that money was put into.
              checking_account_identifier:
                type: integer
                description: Amount transferred.
              transfers_active:
                type: integer
                description: Amount of times transfer was attempted.
              safety_net_active:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              max_transfer_amount:
                type: string
                description: Date for next transfer.
        '400':
          description: Not found.
    post:
      summary: Create user.
      tags:
        - Users
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: user
          description: "Key/value pair to create user record."
          required: true
          in: body
          schema:
            type: object
            properties:
              sequence: 
                type: integer
                description: Id of transfer record.
              bank_user_id: 
                type: string
                description: Origin Account that money was taken out of.
              savings_account_identifier:
                type: string
                description: Destination Account that money was put into.
              checking_account_identifier:
                type: integer
                description: Amount transferred.
              transfers_active:
                type: integer
                description: Amount of times transfer was attempted.
              safety_net_active:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              max_transfer_amount:
                type: string
                description: Date for next transfer.
      responses:
        '200':
          description: OK.
          schema:
            type: object
            properties:
              sequence: 
                type: integer
                description: Id of transfer record.
              bank_user_id: 
                type: string
                description: Origin Account that money was taken out of.
              savings_account_identifier:
                type: string
                description: Destination Account that money was put into.
              checking_account_identifier:
                type: integer
                description: Amount transferred.
              transfers_active:
                type: integer
                description: Amount of times transfer was attempted.
              safety_net_active:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              max_transfer_amount:
                type: string
                description: Date for next transfer.
        '400':
          description: Not found.
    patch:
      summary: Update user record.
      tags:
        - Users
      parameters:
        - name: user_identifier
          description: "Bank Id of user"
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: user
          description: "Key/value pair to update user record."
          required: true
          in: body
          schema:
            type: object
            properties:
              sequence: 
                type: integer
                description: Id of transfer record.
              bank_user_id: 
                type: string
                description: Origin Account that money was taken out of.
              savings_account_identifier:
                type: string
                description: Destination Account that money was put into.
              checking_account_identifier:
                type: integer
                description: Amount transferred.
              transfers_active:
                type: integer
                description: Amount of times transfer was attempted.
              safety_net_active:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              max_transfer_amount:
                type: string
                description: Date for next transfer.
      responses:
        '200':
          description: OK.
          schema:
            type: object
            properties:
              sequence: 
                type: integer
                description: Id of transfer record.
              bank_user_id: 
                type: string
                description: Origin Account that money was taken out of.
              savings_account_identifier:
                type: string
                description: Destination Account that money was put into.
              checking_account_identifier:
                type: integer
                description: Amount transferred.
              transfers_active:
                type: integer
                description: Amount of times transfer was attempted.
              safety_net_active:
                type: boolean
                description: Boolean value indicating if transfer was successful.
              max_transfer_amount:
                type: string
                description: Date for next transfer.
        '400':
          description: Not found.