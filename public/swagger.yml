swagger: '2.0'
info:
  title: API V1
  version: v1
schemes: ['https']
host: api-us.monotto.com
x-explorer-enabled: false
paths:
  '/login':
    post:
      summary: Login endpoint to get authentication token.
      tags:
        - Authentication
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: login
          in: body
          required: true
          schema:
            type: object
            required:
            - email
            - password
            properties:
              email:
                type: string
                description: Bank admin email.
              password:
                type: string
                description: Bank admin password.
      responses:
        '200':
          description: Authorized.
          examples:
             application/json:
               {
                 token: "TOKEN"
               }
          schema:
            type: object
            properties:
              token: 
                type: string
                description: Authorization token. Expires in 24 hrs.
        '401':
          description: Unauthorized.
  '/logout':
    delete:
      summary: Logout endpoint to delete authentication token.
      tags:
        - Authentication
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
      responses:
        '200':
          description: OK.
        '401':
          description: Unauthorized.
  '/vendors/login':
    post:
      summary: (Vendor) Login endpoint to get authentication token.
      tags:
        - Authentication
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: login
          in: body
          required: true
          schema:
            type: object
            required:
            - email
            - password
            properties:
              email:
                type: string
                description: Vendor email.
              password:
                type: string
                description: Vendor password.
      responses:
        '200':
          description: Authorized.
          examples:
             application/json:
               {
                 token: "TOKEN"
               }
          schema:
            type: object
            properties:
              token: 
                type: string
                description: Authorization token. Expires in 24 hrs.
        '401':
          description: Unauthorized.
  '/vendors/logout':
    delete:
      summary: (Vendor) Logout endpoint to delete authentication token.
      tags:
        - Authentication
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
      responses:
        '200':
          description: OK.
        '401':
          description: Unauthorized.
  '/users/{user_identifier}/demographics':
    get:
      summary: Gets all user demographic data.
      tags:
        - Demographics
      parameters:
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: demographic
          description: "Filter user demographics by valid key/value pairs."
          in: body
          schema:
            type: object
            properties:
              demographic[id]:
                type: integer
                description: Id of demographic record.
              demographic[key]:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              demographic[value]:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user demographic data.
          examples:
             application/json:
               [
                 {
                     "id": 1,
                     "key":"Race",
                     "value":"Asian",
                     "created_at":"2017-04-10T01:00:56.881Z",
                     "updated_at":"2017-04-10T01:00:56.881Z"
                  }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of demographic record.
                key:
                  type: string
                  description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
                value:
                  type: string
                  description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        '400':
          description: Not found
    post:
      summary: Creates a user demographic record.
      tags:
        - Demographics
      consumes:
        - application/json
      parameters:
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: demographic
          in: body
          required: true
          schema:
            type: object
            required:
            - demographic[key]
            - demographic[value]
            properties:
              demographic[key]:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              demographic[value]:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Demographic entry created.
          examples:
             application/json:
               {
                 "id": 1,
                 "key":"Race",
                 "value":"Asian",
                 "created_at":"2017-04-10T01:00:56.881Z",
                 "updated_at":"2017-04-10T01:00:56.881Z"
               }
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Unique Id that references the Demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        '422':
          description: unprocessable entity
  '/users/{user_identifier}/demographics/{id}':
    get:
      summary: Gets user demographic.
      tags:
        - Demographics
      parameters:
        - name: id
          description: Id of demographic record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic info returned.
          examples:
             application/json:
               {
                 "id": 1,
                 "key":"Race",
                 "value":"Asian",
                 "created_at":"2017-04-10T01:00:56.881Z",
                 "updated_at":"2017-04-10T01:00:56.881Z"
               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
    patch:
      summary: Updates user demographic record.
      tags:
        - Demographics
      parameters:
        - name: id
          description: Id of demographic record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: demographic
          in: body
          required: true
          schema:
            type: object
            properties:
              demographic[key]:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              demographic[value]:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic updated.
          examples:
             application/json:
               {
                 "id": 1,
                 "key":"Race",
                 "value":"Asian",
                 "created_at":"2017-04-10T01:00:56.881Z",
                 "updated_at":"2017-04-10T01:00:56.881Z"
               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
    delete:
      summary: Deletes user demographic entry.
      tags:
        - Demographics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User demographic deleted.
          examples:
             application/json:
               {
                 "id": 1,
                 "key":"Race",
                 "value":"Asian",
                 "created_at":"2017-04-10T01:00:56.881Z",
                 "updated_at":"2017-04-10T01:00:56.881Z"
               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of demographic record.
              key:
                type: string
                description: Demographic type that can be customized (ie. Gender, Ethnic Group, Profession).
              value:
                type: string
                description: Demographic value in relation to the key (ie. Male, Asian, Doctor).
  '/users/{user_identifier}/goals':
    get:
      summary: Gets all user goal data.
      tags:
        - Goals
      parameters:
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: goal
          description: "Filter user goals by valid key/value pairs."
          in: body
          schema:
            type: object
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
                minimum: 1
                maximum: 10
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user goal data.
          examples:
             application/json:
               [
                 {
                    "id": 1,
                    "tag": "Other",
                    "priority": 10,
                    "created_at": "2017-11-04T05:25:39.248Z",
                    "updated_at": "2017-11-04T05:25:39.248Z",
                    "target_amount": "7.0",
                    "balance": "6.0"
                 }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of goal record.
                tag:
                  type: string
                  description: Customizable value which can be used to group different goals.
                target_amount:
                  type: number
                  description: Total amount to save for goal.
                balance:
                  type: number
                  description: Total amount saved by the user towards the goal.
                priority:
                  type: integer
                  description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        '400':
          description: Not found
    post:
      summary: Creates a user goal record.
      tags:
        - Goals
      consumes:
        - application/json
      parameters:
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            required:
            - goal[xref_goal_name]
            - goal[target_amount]
            - goal[balance]
            - goal[priority]
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Goal entry created.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"
               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        '422':
          description: unprocessable entity
  '/users/{user_identifier}/goals/{id}':
    get:
      summary: Gets user goal.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal info returned.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
    patch:
      summary: Updates user goal record.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          description: "Bank Id of user."
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal updated.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
    delete:
      summary: Deletes user goal entry.
      tags:
        - Goals
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_identifier
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: User goal deleted.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
  '/vendors/users/{token}/goals':
    get:
      summary: (Vendor) Gets all user goal data.
      tags:
        - Goals
      parameters:
        - name: token
          description: "Token for user."
          in: path
          required: true
          type: integer
        - name: goal
          description: "Filter user goals by valid key/value pairs."
          in: body
          schema:
            type: object
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user goal data.
          examples:
             application/json:
               [
                 {
                    "id": 1,
                    "tag": "Other",
                    "priority": 10,
                    "created_at": "2017-11-04T05:25:39.248Z",
                    "updated_at": "2017-11-04T05:25:39.248Z",
                    "target_amount": "7.0",
                    "balance": "6.0"
                 }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                  description: Id of goal record.
                tag:
                  type: string
                  description: Customizable value which can be used to group different goals.
                target_amount:
                  type: number
                  description: Total amount to save for goal.
                balance:
                  type: number
                  description: Total amount saved by the user towards the goal.
                priority:
                  type: integer
                  description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        '400':
          description: Not found
    post:
      summary: (Vendor) Creates a user goal record.
      tags:
        - Goals
      consumes:
        - application/json
      parameters:
        - name: token
          description: "Token for user."
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            required:
            - goal[xref_goal_name]
            - goal[target_amount]
            - goal[balance]
            - goal[priority]
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Goal entry created.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"
               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        '422':
          description: unprocessable entity
  '/vendors/users/{token}/goals/{id}':
    get:
      summary: (Vendor) Gets user goal.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: token
          description: "Token for the user."
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal info returned.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
    patch:
      summary: (Vendor) Updates user goal record.
      tags:
        - Goals
      parameters:
        - name: id
          description: Id of goal record for user.
          in: path
          required: true
          type: integer
          minimum: 1
        - name: token
          description: "Token for user."
          in: path
          required: true
          type: integer
        - name: goal
          in: body
          required: true
          schema:
            type: object
            properties:
              goal[xref_goal_name]:
                type: string
                description: Name of goal.
              goal[tag]:
                type: string
                description: Customizable value which can be used to group different goals.
              goal[target_amount]:
                type: number
                description: Total amount to save for goal.
              goal[balance]:
                type: number
                description: Total amount saved by the user towards the goal.
              goal[priority]:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User goal updated.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
    delete:
      summary: (Vendor) Deletes user goal entry.
      tags:
        - Goals
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: token
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: User goal deleted.
          examples:
             application/json:
               {
                  "id": 1,
                  "tag": "Other",
                  "priority": 10,
                  "created_at": "2017-11-04T05:25:39.248Z",
                  "updated_at": "2017-11-04T05:25:39.248Z",
                  "target_amount": "7.0",
                  "balance": "6.0"

               }
          schema:
            type: object
            properties:
              id: 
                type: integer
                description: Id of goal record.
              tag:
                type: string
                description: Customizable value which can be used to group different goals.
              target_amount:
                type: number
                description: Total amount to save for goal.
              balance:
                type: number
                description: Total amount saved by the user towards the goal.
              priority:
                type: integer
                description: Priority of user's goal. Higher integer value equates to a higher priority. Valid values (1 to 10).
  '/users':
    get:
      summary: Gets all user data.
      tags:
        - Users
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of user data.
          examples:
             application/json:
               [
                 {
                    "bank_user_id":"10020102002306194",
                    "default_savings_account_identifier":"123a46b75n432i",
                    "checking_account_identifier":"123t456t543y",
                    "transfers_active":true,
                    "safety_net_active":true,
                    "max_transfer_amount":70.00,
                    "created_at":"2017-04-09T04:22:28.106Z",
                    "updated_at":"2017-04-09T04:22:28.106Z"
                 }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                bank_user_id: 
                  type: string
                  description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
                default_savings_account_identifier:
                  type: string
                  description: System Id for Savings account that user will be moving money to.
                checking_account_identifier:
                  type: string
                  description: System Id for Checking account that user will be moving money from.
                transfers_active:
                  type: boolean
                  description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
                safety_net_active:
                  type: boolean
                  description: Flag for activating safety net goal. Default on user creation is TRUE. FALSE will remove the safety net goal from the goals array.
                max_transfer_amount:
                   type: number
                   description: Max amount that user's can transfer funds to their savings accounts.
        '400':
          description: Not found.
    post:
      summary: Creates a user record.
      tags:
        - Users
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: user
          description: "Key/value pair to create user record."
          required: true
          in: body
          schema:
            type: object
            required:
            - user[bank_user_id]
            - user[checking_account_identifier]
            - user[default_savings_account_identifier]
            properties:
              user[bank_user_id]: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              user[default_savings_account_identifier]:
                type: string
                description: System Id for Savings account that user will be moving money to.
              user[checking_account_identifier]:
                type: string
                description: System Id for Checking account that user will be moving money from.
              user[transfers_active]:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              user[safety_net_active]:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              user[max_transfer_amount]:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
      responses:
        '200':
          description: OK.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
                }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
        '400':
          description: Not found.
  '/users/{bank_user_id}':
    get:
      summary: Gets user.
      tags:
        - Users
      parameters:
        - name: bank_user_id
          description: Bank identifier for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User info returned.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active": true,
                  "safety_net_active": true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
                }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
    patch:
      summary: Updates user record.
      tags:
        - Users
      parameters:
        - name: bank_user_id
          description: Bank identifier for the user.
          in: path
          required: true
          type: string
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: User updated.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
               }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
    delete:
      summary: Deletes user entry.
      tags:
        - Users
      parameters:
        - name: bank_user_id
          description: Bank identifier for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: User deleted.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
               }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
  '/vendors/users/{token}/balances':
    get:
      summary: (Vendor) Gets user savings account balance.
      tags:
        - Users
      parameters:
        - name: token
          description: Token for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: balance
          in: body
          required: true
          schema:
            type: object
            properties:
              vendor_key:
                type: string
                description: Vendor Key for user.
      responses:
        '200':
          description: User balance info returned.
          examples:
             application/json:
               {
                 savings_balance: 5.00
               }
          schema:
            type: object
            properties:
              savings_balance: 
                type: string
                description: Amount user has in their savings account.
  '/vendors/users':
    get:
      summary: (Vendor) Gets all user data.
      tags:
        - Users
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
          required: true
          type: string
      responses:
        '200':
          description: An array of user data.
          examples:
             application/json:
               [
                 {
                    "bank_user_id":"10020102002306194",
                    "default_savings_account_identifier":"123a46b75n432i",
                    "checking_account_identifier":"123t456t543y",
                    "transfers_active":true,
                    "safety_net_active":true,
                    "max_transfer_amount":70.00,
                    "created_at":"2017-04-09T04:22:28.106Z",
                    "updated_at":"2017-04-09T04:22:28.106Z"
                 }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                bank_user_id: 
                  type: string
                  description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
                default_savings_account_identifier:
                  type: string
                  description: System Id for Savings account that user will be moving money to.
                checking_account_identifier:
                  type: string
                  description: System Id for Checking account that user will be moving money from.
                transfers_active:
                  type: boolean
                  description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
                safety_net_active:
                  type: boolean
                  description: Flag for activating safety net goal. Default on user creation is TRUE. FALSE will remove the safety net goal from the goals array.
                max_transfer_amount:
                   type: number
                   description: Max amount that user's can transfer funds to their savings accounts.
        '400':
          description: Not found.
  '/vendors/financial_institutions/{financial_institution_id}/users':
    post:
      summary: (Vendor) Creates a user record.
      tags:
        - Users
      parameters:
        - name: financial_institution_id
          description: financial_institution id that the user is associated with.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
          required: true
          type: string
        - name: user
          description: "Key/value pair to create user record."
          required: true
          in: body
          schema:
            type: object
            required:
            - user[bank_user_id]
            - user[checking_account_identifier]
            - user[default_savings_account_identifier]
            properties:
              user[bank_user_id]: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              user[default_savings_account_identifier]:
                type: string
                description: System Id for Savings account that user will be moving money to.
              user[checking_account_identifier]:
                type: string
                description: System Id for Checking account that user will be moving money from.
              user[transfers_active]:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              user[safety_net_active]:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              user[max_transfer_amount]:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
      responses:
        '200':
          description: OK.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
                }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
        '400':
          description: Not found.
  '/vendors/users/{token}/offers':
    get:
      summary: (Vendor) Gets all offers for user.
      tags:
        - User
      parameters:
        - name: token
          description: Token for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: balance
          in: body
          schema:
            type: object
            properties:
              vendor_key:
                type: string
                description: Vendor Key for user.
      responses:
        '200':
          description: User offer info returned.
          examples:
             application/json:
                [
                  {
                    "id": 1,
                    "name": "Offer01",
                    "condition": "balance",
                    "symbol": ">=",
                    "value": "50.0",
                    "created_at": "2017-11-05T23:10:53.904Z",
                    "updated_at": "2017-11-05T23:15:41.936Z"
                }
              ]
          schema:
            type: object
            properties:
              condition:
                type: string
                description: Condition applied to the user’s goal to send offer.
              symbol:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              value:
                type: string
                description: Value of the condition.
  '/vendors/users/{token}':
    get:
      summary: (Vendor) Gets user.
      tags:
        - Users
      parameters:
        - name: token
          description: Token for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
          required: true
          type: string
        - name: offer
          in: body
          required: true
          schema:
            type: object
            required:
            - vendor_key
            properties:
              vendor_key:
                type: string
                description: Vendor Key for user.
      responses:
        '200':
          description: User info returned.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active": true,
                  "safety_net_active": true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
                }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
    patch:
      summary: (Vendor) Updates user record.
      tags:
        - Users
      parameters:
        - name: token
          description: Token for the user.
          in: path
          required: true
          type: string
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
          required: true
          type: string
      responses:
        '200':
          description: User updated.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
               }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
    delete:
      summary: (Vendor) Deletes user entry.
      tags:
        - Users
      parameters:
        - name: token
          description: Token for the user.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
          required: true
          type: string
      responses:
        '200':
          description: User deleted.
          examples:
             application/json:
               {
                  "bank_user_id":"10020102002306194",
                  "default_savings_account_identifier":"123a46b75n432i",
                  "checking_account_identifier":"123t456t543y",
                  "transfers_active":true,
                  "safety_net_active":true,
                  "max_transfer_amount":70.00,
                  "created_at":"2017-04-09T04:22:28.106Z",
                  "updated_at":"2017-04-09T04:22:28.106Z"
               }
          schema:
            type: object
            properties:
              bank_user_id: 
                type: string
                description: Unique System Id for User from Bank. This id should be analogous to the unique customer id that the bank already uses to identify users.
              default_savings_account_identifier:
                type: string
                description: System Id for Savings account that user will be moving money to.
              checking_account_identifier:
                type: string
                description: System Id for Checking account that user will be moving money from.
              transfers_active:
                type: boolean
                description: Flag for turning RoboSave transfers on and off. Default is TRUE on create. FALSE will disable the API from submitting transfers or requesting transaction history.
              safety_net_active:
                type: boolean
                description: Flag for activating safety net goal. Default on user creation is TRUE, FALSE will remove the safety net goal from the goals array.
              max_transfer_amount:
                type: number
                description: Max amount that user's can transfer funds to their savings accounts.
  '/ads':
    get:
      summary: Gets all ad data.
      tags:
        - Ads
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of ad data.
          examples:
             application/json:
               [
                 {
                    "id": 10,
                    "header": "Header01",
                    "body": "Body01",
                    "link": "https://www.monotto.com",
                    "image": {
                        "url": "https://monotto-images.s3.amazonaws.com/uploads/ad/image/11/monotto.png"
                    },
                    "created_at": "2017-10-31T21:56:51.527Z",
                    "updated_at": "2017-10-31T21:56:51.527Z",
                    "name": "Ad1"
                 }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                header: 
                  type: string
                  description: Header text for Ad.
                body:
                  type: string
                  description: Body text for Ad.
                link:
                  type: string
                  description: Link to upsell page.
                image:
                  type: object
                  properties:
                    url:
                      type: string
                      description: url string
                name:
                  type: string
                  description: Name of the ad (only visible to the bank admin).
        '400':
          description: Not found
    post:
      summary: Creates a ad record.
      tags:
        - Ads
      parameters:
        - name: Content-Type
          default: multipart/mixed
          description: multipart/mixed
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: ad
          description: "Key/value pair to create ad record."
          required: true
          in: body
          schema:
            type: object
            required:
            - ad[header]
            - ad[body]
            - ad[link]
            - ad[name]
            properties:
              ad[header]: 
                type: string
                description: Header text for Ad.
              ad[body]:
                type: string
                description: Body text for Ad.
              ad[link]:
                type: string
                description: Link to upsell page.
              ad[image]:
                type: string
                description: "Ad image blob. Valid extensions: [jpg, jpeg, gif, png]."
              ad[name]:
                type: string
                description: Name of the ad (only visible to the bank admin).
      responses:
        '200':
          description: OK.
          examples:
             application/json:
               {
                  "id": 10,
                  "header": "Header01",
                  "body": "Body01",
                  "link": "https://www.monotto.com",
                  "image": {
                      "url": "https://monotto-images.s3.amazonaws.com/uploads/ad/image/11/monotto.png"
                  },
                  "created_at": "2017-10-31T21:56:51.527Z",
                  "updated_at": "2017-10-31T21:56:51.527Z",
                  "name": "Ad1"
               }
          schema:
            type: object
            properties:
              header: 
                type: string
                description: Header text for Ad.
              body:
                type: string
                description: Body text for Ad.
              link:
                type: string
                description: Link to upsell page.
              image:
                type: object
                properties:
                  url:
                    type: string
                    description: url string
              name:
                type: string
                description: Name of the ad (only visible to the bank admin).
        '400':
          description: Not found.
  '/ads/{id}':
    get:
      summary: Gets ad.
      tags:
        - Ads
      parameters:
        - name: id
          description: Id for the ad.
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Ad info returned.
          examples:
             application/json:
               {
                  "id": 10,
                  "header": "Header01",
                  "body": "Body01",
                  "link": "https://www.monotto.com",
                  "image": {
                      "url": "https://monotto-images.s3.amazonaws.com/uploads/ad/image/11/monotto.png"
                  },
                  "created_at": "2017-10-31T21:56:51.527Z",
                  "updated_at": "2017-10-31T21:56:51.527Z",
                  "name": "Ad1"
               }
          schema:
            type: object
            properties:
              header: 
                type: string
                description: Header text for Ad.
              body:
                type: string
                description: Body text for Ad.
              link:
                type: string
                description: Link to upsell page.
              image:
                type: object
                properties:
                  url:
                    type: string
                    description: url string
              name:
                type: string
                description: Name of the ad (only visible to the bank admin).
    patch:
      summary: Updates ad record.
      tags:
        - Ads
      parameters:
        - name: id
          description: Id for the ad.
          in: path
          required: true
          type: integer
        - name: ad
          in: body
          required: true
          schema:
            type: object
            properties:
              ad[header]: 
                type: string
                description: Header text for Ad.
              ad[body]:
                type: string
                description: Body text for Ad.
              ad[link]:
                type: string
                description: Link to upsell page.
              ad[image]:
                type: string
                description: "Ad image blob. Valid extensions: [jpg, jpeg, gif, png]."
              ad[name]:
                type: string
                description: Name of the ad (only visible to the bank admin).
        - name: Content-Type
          default: multipart/mixed
          description: multipart/mixed
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Ad updated.
          examples:
             application/json:
               {
                  "id": 10,
                  "header": "Header01",
                  "body": "Body01",
                  "link": "https://www.monotto.com",
                  "image": {
                      "url": "https://monotto-images.s3.amazonaws.com/uploads/ad/image/11/monotto.png"
                  },
                  "created_at": "2017-10-31T21:56:51.527Z",
                  "updated_at": "2017-10-31T21:56:51.527Z",
                  "name": "Ad1"
               }
          schema:
            type: object
            properties:
              header: 
                type: string
                description: Header text for Ad.
              body:
                type: string
                description: Body text for Ad.
                example: Body
              link:
                type: string
                description: Link to upsell page.
              image:
                type: object
                properties:
                  url:
                    type: string
                    description: url string
              name:
                type: string
                description: Name of the ad (only visible to the bank admin).
    delete:
      summary: Deletes ad entry.
      tags:
        - Ads
      parameters:
        - name: id
          description: Id for the ad.
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: Ad deleted.
          examples:
             application/json:
               {
                  "id": 10,
                  "header": "Header01",
                  "body": "Body01",
                  "link": "https://www.monotto.com",
                  "image": {
                      "url": "https://monotto-images.s3.amazonaws.com/uploads/ad/image/11/monotto.png"
                  },
                  "created_at": "2017-10-31T21:56:51.527Z",
                  "updated_at": "2017-10-31T21:56:51.527Z",
                  "name": "Ad1"
               }
          schema:
            type: object
            properties:
              header: 
                type: string
                description: Header text for Ad.
              body:
                type: string
                description: Body text for Ad.
              link:
                type: string
                description: Link to upsell page.
              image:
                type: object
                properties:
                  url:
                    type: string
                    description: url string
              name:
                type: string
                description: Name of the ad (only visible to the bank admin).
  '/products':
    get:
      summary: Gets all product data.
      tags:
        - Products
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of product data.
          examples:
             application/json:
               [
                  {
                      "id": 1,
                      "name": "ProductName01",
                      "created_at": "2017-11-02T22:32:15.684Z",
                      "updated_at": "2017-11-02T22:32:15.684Z",
                  }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the product.
        '400':
          description: Not found
    post:
      summary: Creates a product record.
      tags:
        - Products
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: product
          description: "Key/value pair to create product record."
          required: true
          in: body
          schema:
            type: object
            required:
            - product[name]
            properties:
              product[name]:
                type: string
                description: Name of the product.
      responses:
        '200':
          description: OK.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "ProductName01",
                  "created_at": "2017-11-02T22:32:15.684Z",
                  "updated_at": "2017-11-02T22:32:15.684Z",
               }
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product.
        '400':
          description: Not found.
  '/products/{id}':
    get:
      summary: Gets product.
      tags:
        - Products
      parameters:
        - name: id
          description: Id for the product.
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Product info returned.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "ProductName01",
                  "created_at": "2017-11-02T22:32:15.684Z",
                  "updated_at": "2017-11-02T22:32:15.684Z",
               }
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product.
    delete:
      summary: Deletes product entry.
      tags:
        - Products
      parameters:
        - name: id
          description: Id for the product.
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Product deleted.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "ProductName01",
                  "created_at": "2017-11-02T22:32:15.684Z",
                  "updated_at": "2017-11-02T22:32:15.684Z",
               }
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product.
  '/products/{product_id}/offers':
    get:
      summary: Gets offers scoped under a particular product.
      tags:
        - Products
      parameters:
        - name: product_id
          description: Id for the product.
          in: path
          required: true
          type: integer
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Offers scoped under a product are returned.
          examples:
             application/json:
               [
                  {
                      "id": 1,
                      "name": "Offer01",
                      "condition": "balance",
                      "symbol": ">=",
                      "value": "50.0",
                      "created_at": "2017-11-05T23:10:53.904Z",
                      "updated_at": "2017-11-05T23:15:41.936Z"
                  }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                condition:
                  type: string
                  description: Condition applied to the user’s goal to send offer.
                symbol:
                  type: string
                  description: "[ '=', '>', '<', '>=', '<=' ]."
                value:
                  type: string
                  description: Value of the condition.
  '/offers':
    get:
      summary: Gets all offer data.
      tags:
        - Offers
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of offer data.
          examples:
             application/json:
               [
                  {
                      "id": 1,
                      "name": "Offer01",
                      "condition": "balance",
                      "symbol": ">=",
                      "value": "50.0",
                      "created_at": "2017-11-05T23:10:53.904Z",
                      "updated_at": "2017-11-05T23:15:41.936Z"
                  }
               ]
          schema:
            type: array
            items:
              type: object
              properties:
                condition:
                  type: string
                  description: Condition applied to the user’s goal to send offer.
                symbol:
                  type: string
                  description: "[ '=', '>', '<', '>=', '<=' ]."
                value:
                  type: string
                  description: Value of the condition.
        '400':
          description: Not found.
    post:
      summary: Creates a offer record.
      tags:
        - Offers
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: offer
          description: "Key/value pair to create offer record."
          required: true
          in: body
          schema:
            type: object
            required:
            - offer[condition]
            - offer[symbol]
            - offer[value]
            - offer[xref_goal_name]
            properties:
              offer[condition]:
                type: string
                description: "Condition applied to the user’s goal to send offer Valid values [ 'balance', 'percentage_complete', 'time_until_completion']."
              offer[symbol]:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              offer[value]:
                type: string
                description: Value of the condition.
              offer[xref_goal_name]:
                type: string
                description: Name of goal type that is to be attached to the offer.
      responses:
        '200':
          description: OK.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "Offer01",
                  "condition": "balance",
                  "symbol": ">=",
                  "value": "50.0",
                  "created_at": "2017-11-05T23:10:53.904Z",
                  "updated_at": "2017-11-05T23:15:41.936Z"
               }
          schema:
            type: object
            properties:
              condition:
                type: string
                description: Condition applied to the user’s goal to send offer.
              symbol:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              value:
                type: string
                description: Value of the condition.
        '400':
          description: Not found.
  '/offers/{id}':
    get:
      summary: Gets offer.
      tags:
        - Offers
      parameters:
        - name: id
          description: Identifier for the offer.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Offer info returned.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "Offer01",
                  "condition": "balance",
                  "symbol": ">=",
                  "value": "50.0",
                  "created_at": "2017-11-05T23:10:53.904Z",
                  "updated_at": "2017-11-05T23:15:41.936Z"
               }
          schema:
            type: object
            properties:
              condition:
                type: string
                description: Condition applied to the user’s goal to send offer.
              symbol:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              value:
                type: string
                description: Value of the condition.
    patch:
      summary: Updates offer record.
      tags:
        - Offers
      parameters:
        - name: id
          description: Identifier for the offer.
          in: path
          required: true
          type: string
        - name: offer
          in: body
          required: true
          schema:
            type: object
            properties:
              offer[condition]:
                type: string
                description: "Condition applied to the user’s goal to send offer Valid values [ 'balance', 'percentage_complete', 'time_until_completion']."
              offer[symbol]:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              offer[value]:
                type: string
                description: Value of the condition.
              offer[xref_goal_name]:
                type: string
                description: Name of goal type that is to be attached to the offer.
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          in: header
          default: Token token={TOKEN_VALUE}
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Offer updated.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "Offer01",
                  "condition": "balance",
                  "symbol": ">=",
                  "value": "50.0",
                  "created_at": "2017-11-05T23:10:53.904Z",
                  "updated_at": "2017-11-05T23:15:41.936Z"
               }
          schema:
            type: object
            properties:
              condition:
                type: string
                description: Condition applied to the user’s goal to send offer.
              symbol:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              value:
                type: string
                description: Value of the condition.
    delete:
      summary: Deletes offer entry.
      tags:
        - Offers
      parameters:
        - name: id
          description: Identifier for the offer.
          in: path
          required: true
          type: string
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Offer deleted.
          examples:
             application/json:
               {
                  "id": 1,
                  "name": "Offer01",
                  "condition": "balance",
                  "symbol": ">=",
                  "value": "50.0",
                  "created_at": "2017-11-05T23:10:53.904Z",
                  "updated_at": "2017-11-05T23:15:41.936Z"
               }
          schema:
            type: object
            properties:
              condition:
                type: string
                description: Condition applied to the user’s goal to send offer.
              symbol:
                type: string
                description: "[ '=', '>', '<', '>=', '<=' ]."
              value:
                type: string
                description: Value of the condition.
  '/historical_snapshots':
    get:
      summary: Gets historical account-level snapshot data.
      tags:
        - Historical Account Level Snapshot
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Historical snapshot data.
          examples:
             application/json:
              [
                  {
                      "id": 3,
                      "average_user_balance": "0.0",
                      "sum_balance": "0.0",
                      "sum_message_clicks": 0,
                      "total_messages": 1,
                      "total_users": 1,
                      "created_at": "2017-11-20T11:00:04.389Z",
                      "updated_at": "2017-11-20T15:16:28.981Z",
                      "date": "2017-11-20T11:00:04.389Z",
                      "total_num_of_goals": 0,
                      "last_seven_days_user_signup": 0,
                      "total_amount_of_completed_goals": 0
                  },
                  {
                      "id": 4,
                      "average_user_balance": "0.0",
                      "sum_balance": "0.0",
                      "sum_message_clicks": 0,
                      "total_messages": 1,
                      "total_users": 1,
                      "created_at": "2017-11-20T11:00:04.392Z",
                      "updated_at": "2017-11-20T15:16:28.987Z",
                      "date": "2017-11-20T21:00:04.392Z",
                      "total_num_of_goals": 0,
                      "last_seven_days_user_signup": 0,
                      "total_amount_of_completed_goals": 0
                  }
              ]
          schema:
            type: object
            properties:
              average_user_balance: 
                type: number
                description: Average balance of all users.
              sum_balance:
                type: number
                description: Sum of all balances across all users.
              sum_message_clicks:
                type: integer
                description: Total amount of message clicks.
              total_messages:
                type: integer
                description: Total offers sent to users.
              total_num_of_goals:
                type: integer
                description: Total number of goals created by users within a financial institution.
              last_seven_days_user_signup:
                type: integer
                description: New users from the 7 days.
              total_amount_of_completed_goals:
                 type: integer
                 description: Amount of completed goals by users within a financial institution.
              total_users:
                type: integer
                description: Total users.
              historical_snapshot_stats[thirty_day_savings]:
                type: number
                description: Total amount of money saved by users within the past 30 days.
  '/snapshots':
    get:
      summary: Gets current account-level snapshot data.
      tags:
        - Account Level Snapshot
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
          required: true
          type: string
      responses:
        '200':
          description: Account level snapshot data.
          examples:
             application/json:
              {
                  "financial_institution_id": 1,
                  "average_user_balance": "1.99",
                  "sum_balance": "1.99",
                  "sum_message_clicks": 0,
                  "total_messages": 1,
                  "total_num_of_goals": 1,
                  "total_users": 1,
                  "last_seven_days_user_signup": 0,
                  "total_amount_of_completed_goals": 0,
                  "historical_snapshot_stats": [
                      {
                          "financial_institution_id": 1,
                          "thirty_day_savings": "1.2"
                      }
                  ]
              }
          schema:
            type: object
            properties:
              average_user_balance: 
                type: number
                description: Average balance of all users.
              sum_balance:
                type: number
                description: Sum of all balances across all users.
              sum_message_clicks:
                type: integer
                description: Total amount of message clicks.
              total_messages:
                type: integer
                description: Total offers sent to users.
              total_num_of_goals:
                type: integer
                description: Total number of goals created by users within a financial institution.
              last_seven_days_user_signup:
                type: integer
                description: New users from the 7 days.
              total_amount_of_completed_goals:
                 type: integer
                 description: Amount of completed goals by users within a financial institution.
              total_users:
                type: integer
                description: Total users.
              historical_snapshot_stats[thirty_day_savings]:
                type: number
                description: Total amount of money saved by users within the past 30 days.
  '/xref_goal_types':
    get:
      summary: Gets all xref goal types data.
      tags:
        - Xref Goal Types
      parameters:
        - name: Content-Type
          default: application/json
          description: application/json
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
      responses:
        '200':
          description: An array of xref_goal_type data.
          examples:
             application/json:
              [
                  {
                      "id": 22,
                      "code": "CAR",
                      "name": "Car Goal",
                      "department": null,
                      "created_at": "2017-11-21T07:08:23.218Z",
                      "updated_at": "2017-11-21T07:08:23.218Z",
                      "financial_institution_id": 1,
                      "total_num_of_goals": 0
                  },
                  {
                      "id": 23,
                      "code": "HOUSE",
                      "name": "House Goal",
                      "department": null,
                      "created_at": "2017-11-21T07:08:39.432Z",
                      "updated_at": "2017-11-21T07:08:39.432Z",
                      "financial_institution_id": 1,
                      "total_num_of_goals": 0
                  },
                  {
                      "id": 24,
                      "code": "VACA",
                      "name": "Vacation Goal",
                      "department": null,
                      "created_at": "2017-11-21T07:08:50.338Z",
                      "updated_at": "2017-11-21T07:08:50.338Z",
                      "financial_institution_id": 1,
                      "total_num_of_goals": 0
                  },
                  {
                      "id": 25,
                      "code": "TOTSVGS",
                      "name": "Total Savings",
                      "department": null,
                      "created_at": "2017-11-21T07:09:03.682Z",
                      "updated_at": "2017-11-21T07:09:03.682Z",
                      "financial_institution_id": 1,
                      "total_num_of_goals": 0
                  },
                  {
                      "id": 26,
                      "code": "OTHER",
                      "name": "Other",
                      "department": null,
                      "created_at": "2017-11-21T07:09:13.858Z",
                      "updated_at": "2017-11-21T07:09:13.858Z",
                      "financial_institution_id": 1,
                      "total_num_of_goals": 0
                  }
              ]
          schema:
            type: array
            items:
              type: object
              properties:
                code: 
                  type: string
                  description: Code for xref goal type.
                name:
                  type: string
                  description: Name for xref goal type.
                department:
                  type: string
                  description: Department name of your organization that monitors this goal.
                total_num_of_goals:
                  type: integer
                  description: Total number of goals associated with the goal type.
        '400':
          description: Not found
    post:
      summary: Creates a xref goal type record.
      tags:
        - Xref Goal Types
      parameters:
        - name: Content-Type
          default: multipart/mixed
          description: multipart/mixed
          in: header
          required: true
          type: string
        - name: Authorization
          default: Token token={TOKEN_VALUE}
          in: header
          description: "Token authentication header"
          required: true
          type: string
        - name: xref_goal_type
          description: "Key/value pair to create xref_goal_type record."
          required: true
          in: body
          schema:
            type: object
            required:
            - xref_goal_type[code]
            - xref_goal_type[name]
            properties:
              xref_goal_type[code]: 
                type: string
                description: Code for xref goal type.
              xref_goal_type[name]:
                type: string
                description: Name for xref goal type.
              xref_goal_type[department]:
                type: string
                description: Department name of your organization that monitors this goal.
      responses:
        '200':
          description: OK.
          examples:
             application/json:
                {
                    "id": 33,
                    "code": "MISC",
                    "name": "Smart Phone",
                    "department": null,
                    "created_at": "2017-11-25T01:24:37.985Z",
                    "updated_at": "2017-11-25T01:24:37.985Z",
                }
        '422':
          description: Unprocessable entity.
          examples:
             application/json:
              {
                "errors": {
                    "code": [
                        "has already been taken",
                        "can't be blank"
                    ],
                    "name": [
                        "has already been taken",
                        "can't be blank"
                    ]
                }
              }
          schema:
            type: object
            properties:
              code: 
                type: string
                description: Code for xref goal type.
              name:
                type: string
                description: Name for xref goal type.
              department:
                type: string
                description: Department name of your organization that monitors this goal.
        '400':
          description: Not found.
  '/xref_goal_types/{id}':
      get:
        summary: Gets xref goal type.
        tags:
          - Xref Goal Types
        parameters:
          - name: id
            description: Identifier for the xref goal type.
            in: path
            required: true
            type: string
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
            required: true
            type: string
        responses:
          '200':
            description: Xref Goal info returned.
            examples:
               application/json:
                {
                    "id": 33,
                    "code": "MISC",
                    "name": "Smart Phone",
                    "department": null,
                    "created_at": "2017-11-25T01:24:37.985Z",
                    "updated_at": "2017-11-25T01:24:37.985Z",
                    "total_num_of_goals": 0
                }
            schema:
              type: object
              properties:
                code: 
                  type: string
                  description: Code for xref goal type.
                name:
                  type: string
                  description: Name for xref goal type.
                department:
                  type: string
                  description: Department name of your organization that monitors this goal.
                total_num_of_goals:
                  type: integer
                  description: Total number of goals associated with the goal type.
      patch:
        summary: Updates offer record.
        tags:
          - Xref Goal Types
        parameters:
          - name: id
            description: Identifier for the offer.
            in: path
            required: true
            type: string
          - name: xref_goal_type
            in: body
            required: true
            schema:
              type: object
              properties:
                xref_goal_type[code]: 
                  type: string
                  description: Code for xref goal type.
                xref_goal_type[name]:
                  type: string
                  description: Name for xref goal type.
                xref_goal_type[department]:
                  type: string
                  description: Department name of your organization that monitors this goal.
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
            required: true
            type: string
        responses:
          '200':
            description: Xref Goal Type updated.
            examples:
               application/json:
                 {
                      "id": 33,
                      "code": "MISC",
                      "name": "Smart Phone",
                      "department": null,
                      "created_at": "2017-11-25T01:24:37.985Z",
                      "updated_at": "2017-11-25T01:24:37.985Z",
                 }
            schema:
              type: object
              properties:
                code: 
                  type: string
                  description: Code for xref goal type.
                name:
                  type: string
                  description: Name for xref goal type.
                department:
                  type: string
                  description: Department name of your organization that monitors this goal.
      delete:
        summary: Deletes offer entry.
        tags:
          - Xref Goal Types
        parameters:
          - name: id
            description: Identifier for the xref goal type.
            in: path
            required: true
            type: string
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            default: Token token={TOKEN_VALUE}
            in: header
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
            required: true
            type: string
        responses:
          '200':
            description: Xref Goal Type record deleted.
            examples:
               application/json:
                 {
                    "id": 33,
                    "code": "MISC",
                    "name": "Smart Phone",
                    "department": null,
                    "created_at": "2017-11-25T01:24:37.985Z",
                    "updated_at": "2017-11-25T01:24:37.985Z"
                 }
            schema:
              type: object
              properties:
                code: 
                  type: string
                  description: Code for xref goal type.
                name:
                  type: string
                  description: Name for xref goal type.
                department:
                  type: string
                  description: Department name of your organization that monitors this goal.
  '/financial_institutions':
      get:
        summary: Gets financial institution info.
        tags:
          - Financial Institution
        parameters:
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial institution info returned.
            examples:
               application/json:
                {
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }
            schema:
              type: object
              properties:
                max_transfer_amount: 
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                transfers_active:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
  '/financial_institutions/{id}':
      patch:
        summary: Updates financial institution record.
        tags:
          - Financial Institution
        parameters:
          - name: id
            description: Identifier for the financial institution.
            in: path
            required: true
            type: string
          - name: financial_institution
            in: body
            required: true
            schema:
              type: object
              properties:
                financial_institution[max_transfer_amount]:
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                financial_institution[transfers_active]:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial Institution updated.
            examples:
               application/json:
                {
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }
            schema:
              type: object
              properties:
                location:
                  type: string
                  description: Location of Financial Institution.
                mobile:
                  type: string
                  description: Phone number.
                name:
                  type: string
                  description: Name of Financial Institution.
                notes:
                  type: string
                  description: Notes.
                relationship_manager:
                  type: string
                  description: Name of the point of contact.
                web:
                  type: string
                  description: Website of Financial Institution.
  '/vendors/financial_institutions':
      get:
        summary: (Vendor) Gets all financial institutions under a vendor.
        tags:
          - Financial Institution
        parameters:
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial institution info returned.
            examples:
               application/json:
                [{
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }]
            schema:
              type: object
              properties:
                max_transfer_amount: 
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                transfers_active:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
  '/vendors/financial_institutions/{id}':
      get:
        summary: (Vendor) Gets financial institution info.
        tags:
          - Financial Institution
        parameters:
          - name: id
            description: Identifier for the financial institution.
            in: path
            required: true
            type: string
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial institution info returned.
            examples:
               application/json:
                {
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }
            schema:
              type: object
              properties:
                max_transfer_amount: 
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                transfers_active:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
      patch:
        summary: (Vendor) Updates financial institution record.
        tags:
          - Financial Institution
        parameters:
          - name: id
            description: Identifier for the financial institution.
            in: path
            required: true
            type: string
          - name: financial_institution
            in: body
            required: true
            schema:
              type: object
              properties:
                financial_institution[max_transfer_amount]: 
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                financial_institution[transfers_active]:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
                financial_institution[location]:
                  type: string
                  description: Location of Financial Institution.
                financial_institution[mobile]:
                  type: string
                  description: Phone number.
                financial_institution[name]:
                  type: string
                  description: Name of Financial Institution.
                financial_institution[notes]:
                  type: string
                  description: Notes.
                financial_institution[relationship_manager]:
                  type: string
                  description: Name of the point of contact.
                financial_institution[web]:
                  type: string
                  description: Website of Financial Institution.
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial Institution updated.
            examples:
               application/json:
                {
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }
            schema:
              type: object
              properties:
                location:
                  type: string
                  description: Location of Financial Institution.
                mobile:
                  type: string
                  description: Phone number.
                name:
                  type: string
                  description: Name of Financial Institution.
                notes:
                  type: string
                  description: Notes.
                relationship_manager:
                  type: string
                  description: Name of the point of contact.
                web:
                  type: string
                  description: Website of Financial Institution.
      post:
        summary: (Vendor) Creates financial institution record.
        tags:
          - Financial Institution
        parameters:
          - name: id
            description: Identifier for the financial institution.
            in: path
            required: true
            type: string
          - name: financial_institution
            in: body
            required: true
            schema:
              type: object
              properties:
                financial_institution[max_transfer_amount]: 
                  type: number
                  description: Max transfer amount a user initiate within a particular financial institution.
                financial_institution[transfers_active]:
                  type: boolean
                  description: Boolean that states whether user transfers should take place within a particular financial institution.
                financial_institution[location]:
                  type: string
                  description: Location of Financial Institution.
                financial_institution[mobile]:
                  type: string
                  description: Phone number.
                financial_institution[name]:
                  type: string
                  description: Name of Financial Institution.
                financial_institution[notes]:
                  type: string
                  description: Notes.
                financial_institution[relationship_manager]:
                  type: string
                  description: Name of the point of contact.
                financial_institution[web]:
                  type: string
                  description: Website of Financial Institution.
          - name: Content-Type
            default: application/json
            description: application/json
            in: header
            required: true
            type: string
          - name: Authorization
            in: header
            default: Token token={TOKEN_VALUE}
            description: "Token authentication header. Replace {TOKEN_VALUE} with your token from the /vendors/login call."
            required: true
            type: string
        responses:
          '200':
            description: Financial Institution updated.
            examples:
               application/json:
                {
                  "id": 1,
                  "name": "Bank Of America",
                  "location": "Atlanta, Ga",
                  "core": null,
                  "web": null,
                  "mobile": null,
                  "notes": null,
                  "relationship_manager": null,
                  "max_transfer_amount": "0.0",
                  "transfers_active": null,
                  "created_at": "2017-10-27T19:55:29.123Z",
                  "updated_at": "2017-10-27T19:55:29.123Z"
                }
            schema:
              type: object
              properties:
                location:
                  type: string
                  description: Location of Financial Institution.
                mobile:
                  type: string
                  description: Phone number.
                name:
                  type: string
                  description: Name of Financial Institution.
                notes:
                  type: string
                  description: Notes.
                relationship_manager:
                  type: string
                  description: Name of the point of contact.
                web:
                  type: string
                  description: Website of Financial Institution.
